{"version":3,"sources":["redux/reducers/index.js","components/filter/index.js","components/fullscreen_loader/index.js","components/item/index.js","components/list/index.js","components/modal/index.js","components/pagination/index.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["fetchCharactersAll","createAsyncThunk","arg","thunkApi","a","stateFilter","getState","filterParameters","newPage","isEqual","name","status","gender","species","type","fetch","then","res","json","data","result","rejectWithValue","fulfillWithValue","fetchDetailCharacter","id","rootReducer","createSlice","initialState","characters","detailCharacter","openDetailModal","curPage","countPages","loading","bigLoading","reducers","closeModal","state","aciton","extraReducers","pending","action","fulfilled","Number","meta","payload","info","pages","results","rejected","actions","Filter","useState","open","setOpen","setName","setStatus","setSpecies","setType","setGender","dispatch","useDispatch","useSelector","Button","onClick","className","Collapse","in","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","onChange","target","value","placeholder","Check","inline","label","variant","FullscreenLoader","Spinner","animation","CharactersListItem","props","Col","md","style","marginBottom","Card","Img","src","image","alt","Body","Title","ListGroup","Item","Text","dataset","CharactersList","Row","length","map","elem","ModalDetail","detailCharacterObj","obj","Object","keys","newObj","forEach","key","entries","getValues","Modal","show","onHide","Header","closeButton","i","Footer","PaginationCharacters","endPages","handleChangePage","pagAr","push","Pagination","active","undefined","Ellipsis","App","useEffect","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe4e82cb.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport { isEqual } from 'lodash';\r\n\r\nconst initialState = {\r\n    characters: [],\r\n    filterParameters: {\r\n        name: \"\",\r\n        status: \"\",\r\n        gender: \"\",\r\n        species: \"\",\r\n        type: \"\"\r\n    },\r\n    detailCharacter: {},\r\n    openDetailModal: false,\r\n    curPage: 1,\r\n    countPages: 1,\r\n    loading: false,\r\n    bigLoading: false\r\n}\r\n\r\nexport const fetchCharactersAll = createAsyncThunk(\r\n    'characters/fetchAll',\r\n    async (arg, thunkApi) => {\r\n        const stateFilter = thunkApi.getState().filterParameters;\r\n        let newPage = arg.newPage;\r\n        if (!isEqual(stateFilter, arg.filterParameters)) {\r\n            newPage = 1;\r\n        }\r\n        const { name, status, gender, species, type } = arg.filterParameters;\r\n        try {\r\n            const result = await fetch(`https://rickandmortyapi.com/api/character/?page=${newPage}&name=${name}&status=${status}&gender=${gender}&species=${species}&type=${type}`)\r\n            .then(res => {\r\n                if(res.status === 404){\r\n                    return 404;\r\n                }else{\r\n                    return res.json();\r\n                }\r\n            }).then(data => {\r\n                return data;\r\n            });\r\n            \r\n            return (result === 404) ? thunkApi.rejectWithValue(arg.filterParameters) : thunkApi.fulfillWithValue(result);\r\n        } catch (err) {\r\n            return thunkApi.rejectWithValue(\"Oops\");\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchDetailCharacter = createAsyncThunk(\r\n    'characters/fetchDetail',\r\n    async (id, thunkApi) => {\r\n        try {\r\n            const res = await fetch(`https://rickandmortyapi.com/api/character/${id}`);\r\n            return res.json();\r\n        } catch (err) {\r\n            return thunkApi.rejectWithValue(\"Oops\");\r\n        }\r\n    }\r\n)\r\n\r\nconst rootReducer = createSlice({\r\n    name: 'characters',\r\n    initialState,\r\n    reducers: {\r\n        closeModal(state, aciton) {\r\n            state.openDetailModal = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchCharactersAll.pending]: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        [fetchCharactersAll.fulfilled]: (state, action) => {\r\n            state.loading = false;\r\n            state.curPage = Number(action.meta.arg.newPage);\r\n            state.countPages = Number(action.payload.info.pages);\r\n            [state.characters, state.filterParameters] = [action.payload.results, action.meta.arg.filterParameters]\r\n        },\r\n        [fetchCharactersAll.rejected]: (state, action) => {\r\n            state.loading = false;\r\n            [state.characters, state.filterParameters, state.countPages, state.curPage] = [[], action.payload, 1, 1]\r\n        },\r\n        [fetchDetailCharacter.pending]: (state, action) => {\r\n            state.bigLoading = true;\r\n        },\r\n        [fetchDetailCharacter.fulfilled]: (state, action) => {\r\n            state.detailCharacter = action.payload;\r\n            state.openDetailModal = true;\r\n            state.bigLoading = false;\r\n        },\r\n        [fetchDetailCharacter.rejected]: (state, action) => {\r\n            state.bigLoading = false;\r\n        },\r\n    }\r\n});\r\n\r\nexport const actions = rootReducer.actions;\r\n\r\nexport default rootReducer.reducer;","import { useState } from \"react\";\r\nimport { Button, Collapse, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCharactersAll } from \"../../redux/reducers\";\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Filter = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [species, setSpecies] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const {filterParameters, loading} = useSelector(state => state);\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(isEqual({name,status,species,type,gender}, filterParameters)) return;\r\n        dispatch(fetchCharactersAll({filterParameters : {name, status, species, type, gender}, newPage: 1}));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={() => setOpen(!open)} aria-expanded={open}>{!open ? \"Open\" : \"Close\"} filter</Button>\r\n            {(loading) ? \"Идет загрузка...\" : \"Загрузка завершена\"}\r\n            <div className=\"filter_block\">\r\n                <Collapse in={open} className=\"filter\">\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group className=\"mb-2\" controlId=\"filterName\">\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control type=\"text\" onChange={(e) => setName(e.target.value)} placeholder=\"Enter name\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\">\r\n                            <Form.Label className=\"d-block\">Status:</Form.Label>\r\n                            <Form.Check inline type=\"radio\" onChange={(e) => setStatus(e.target.value)} id=\"statusFilter1\" value=\"alive\" name=\"statusFilter\" label=\"Alive\" />\r\n                            <Form.Check inline type=\"radio\" onChange={(e) => setStatus(e.target.value)} id=\"statusFilter2\" value=\"dead\" name=\"statusFilter\" label=\"Dead\" />\r\n                            <Form.Check inline type=\"radio\" onChange={(e) => setStatus(e.target.value)} id=\"statusFilter3\" value=\"unknown\" name=\"statusFilter\" label=\"unknown\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\">\r\n                            <Form.Label className=\"d-block\">Species:</Form.Label>\r\n                            <Form.Control onChange={(e) => setSpecies(e.target.value)} type=\"text\" placeholder=\"Enter type\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\" controlId=\"filterType\">\r\n                            <Form.Label>Type:</Form.Label>\r\n                            <Form.Control onChange={(e) => setType(e.target.value)} type=\"text\" placeholder=\"Enter type\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\">\r\n                            <Form.Label className=\"d-block\">Gender:</Form.Label>\r\n                            <Form.Check inline onChange={(e) => setGender(e.target.value)} type=\"radio\" id=\"genderFilter1\" value=\"male\" name=\"genderFilter\" label=\"Male\" />\r\n                            <Form.Check inline onChange={(e) => setGender(e.target.value)} type=\"radio\" id=\"genderFilter2\" value=\"female\" name=\"genderFilter\" label=\"Female\" />\r\n                            <Form.Check inline onChange={(e) => setGender(e.target.value)} type=\"radio\" id=\"genderFilter3\" value=\"genderless\" name=\"genderFilter\" label=\"Genderless\" />\r\n                            <Form.Check inline onChange={(e) => setGender(e.target.value)} type=\"radio\" id=\"genderFilter4\" value=\"unknown\" name=\"genderFilter\" label=\"unknown\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Apply\r\n                        </Button>\r\n                    </Form>\r\n                </Collapse>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter;","import { Spinner } from \"react-bootstrap\";\r\n\r\nconst FullscreenLoader = () => {\r\n    return (\r\n        <div className=\"fullscreen_loader\">\r\n            <Spinner animation=\"grow\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FullscreenLoader;","import { Button, Card, Col, ListGroup } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchDetailCharacter } from \"../../redux/reducers\";\r\nconst CharactersListItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Col md={3} style={{marginBottom: \"20px\"}}>\r\n            <Card>\r\n                <Card.Img variant=\"top\" src={props.image} alt={props.name}/>\r\n                <Card.Body>\r\n                    <Card.Title>{props.name}</Card.Title>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                            <Card.Text>Gender:</Card.Text>\r\n                            <Card.Text>{props.gender}</Card.Text>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                            <Card.Text>Species:</Card.Text>\r\n                            <Card.Text>{props.species}</Card.Text>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                            <Card.Text>Status:</Card.Text>\r\n                            <Card.Text>{props.status}</Card.Text>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                            <Card.Text>Type:</Card.Text>\r\n                            <Card.Text>{props.type}</Card.Text>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Button variant=\"primary\" data-id={props.id} onClick={(e) => dispatch(fetchDetailCharacter(e.target.dataset.id))}>Show detail</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default CharactersListItem;","import { Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CharactersListItem from \"../item\";\r\n\r\nfunction CharactersList() {\r\n    const {characters, loading} = useSelector(state => state);\r\n    return (\r\n        <Row>\r\n            {characters.length !== 0 ? \r\n                characters.map((elem) =>\r\n                    <CharactersListItem key={elem.id} {...elem} />\r\n                )\r\n                : !loading ? <div className=\"not_found\">NOT FOUND</div> : \"\"\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CharactersList;","import { Button, Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actions } from \"../../redux/reducers\";\r\n\r\nconst ModalDetail = () => {\r\n    const dispatch = useDispatch();\r\n    const {openDetailModal, detailCharacter} = useSelector(state => state);\r\n\r\n    function getValues(obj){\r\n        if(Object.keys(obj).length === 0) return obj;\r\n        let newObj = {};\r\n        Object.keys(obj).forEach(key => {\r\n            newObj[key] = (obj[key] instanceof Object) ? Object.entries(obj[key])[0][1] : obj[key]; \r\n        });\r\n        return newObj;\r\n    }\r\n    let detailCharacterObj = getValues(detailCharacter);\r\n\r\n    return (\r\n        <Modal show={openDetailModal} onHide={() => dispatch(actions.closeModal())}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{detailCharacter.name}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <img src={detailCharacter.image} alt={detailCharacter.name} className=\"detailImg\"/>\r\n                <ul className=\"detaiList\">\r\n                    {Object.keys(detailCharacterObj).map((key,i) => \r\n                        <li className=\"detailList__item\" key={i}>\r\n                            <p>{key}</p>\r\n                            <p>{detailCharacterObj[key]}</p>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => dispatch(actions.closeModal())}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalDetail;","import { Pagination } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCharactersAll } from \"../../redux/reducers\";\r\n\r\nconst PaginationCharacters = () => {\r\n    const { curPage, countPages, filterParameters, loading } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChangePage = (e) => {\r\n        dispatch(fetchCharactersAll({\r\n            filterParameters,\r\n            newPage: e.target.dataset.value\r\n        }));\r\n    }\r\n\r\n    let endPages;\r\n    if (countPages < 8 || countPages === curPage) {\r\n        endPages = countPages;\r\n    } else {\r\n        if (curPage + 2 > countPages) {\r\n            endPages = countPages;\r\n        } else {\r\n            endPages = curPage + 2;\r\n        }\r\n    }\r\n\r\n    let startPages;\r\n    if (curPage >= 4 && countPages > 8) {\r\n        startPages = (countPages < 8) ? 1 : curPage - (2);\r\n    } else {\r\n        startPages = 1\r\n    }\r\n\r\n    let pagAr = [];\r\n    for (let i = startPages; i <= endPages; i++) {\r\n        pagAr.push(\r\n            <Pagination.Item key={i} data-value={i} active={curPage === i} onClick={curPage !== i ? handleChangePage : undefined} >\r\n                {i}\r\n            </Pagination.Item>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pagination>\r\n                {(curPage > 3) ? <Pagination.Item data-value=\"1\" onClick={handleChangePage}>1</Pagination.Item> : \"\"}\r\n                {pagAr}\r\n                {(endPages < countPages)\r\n                    ?\r\n                    <>\r\n                        {(curPage + 3 !== countPages) ? <Pagination.Ellipsis /> : \"\"}\r\n                        <Pagination.Item data-value={countPages} onClick={handleChangePage}>{countPages}</Pagination.Item>\r\n                    </>\r\n                    : \"\"\r\n                }\r\n            </Pagination>\r\n            {(loading) ? \"Идет загрузка...\" : \"Загрузка завершена\"}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginationCharacters;","import { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Filter from \"./components/filter\";\nimport FullscreenLoader from \"./components/fullscreen_loader\";\nimport CharactersList from \"./components/list\";\nimport ModalDetail from \"./components/modal\";\nimport PaginationCharacters from \"./components/pagination\";\nimport { fetchCharactersAll } from \"./redux/reducers\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { filterParameters, countPages, bigLoading } = useSelector(state => state);\n\n  useEffect(() => {\n    dispatch(fetchCharactersAll({ filterParameters, newPage: 1 }));\n  }, [])\n\n  return (\n    <>\n      <Container>\n        <Filter />\n        <CharactersList />\n        {countPages > 1 ? <PaginationCharacters /> : \"\"}\n        <ModalDetail />\n      </Container>\n      {bigLoading ? <FullscreenLoader /> : \"\"}\n    </>\n      );\n}\n\n      export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const store = configureStore({\r\n    reducer: reducers\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}